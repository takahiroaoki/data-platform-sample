version: "3.8"

services:
  fluentd:
    build:
      context: .
      dockerfile: Dockerfile.fluentd
    volumes:
      - ../fluentd/etc:/fluentd/etc
      - ../fluentd/log:/fluentd/log
      - ../nfs_mock:/nfs
  broker:
    image: apache/kafka:3.8.0
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      TOPIC: $TOPIC_TAG
    volumes:
      - ../kafka/create_topic.sh:/usr/local/bin/create_topic.sh
    command: create_topic.sh
  postgres:
    image: bitnami/postgresql:15.8.0
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DATABASE: $POSTGRES_DATABASE
    ports: 
      - $POSTGRES_PORT:5432
    restart: always
  metabase:
    image: metabase/metabase:v0.50.26.1
    environment:
      MB_DB_TYPE: postgres
      MB_DB_HOST: postgres
      MB_DB_PORT: $POSTGRES_PORT
      MB_DB_USER: $POSTGRES_USER
      MB_DB_PASS: $POSTGRES_PASSWORD
      MB_DB_DBNAME: $POSTGRES_DATABASE
    ports:
      - 3000:3000
    depends_on:
      - postgres
